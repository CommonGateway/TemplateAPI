openapi: 3.1.0
x-stoplight:
  id: h91tp4louzyz9
info:
  title: TemplateAPI
  version: '1.0'
  summary: Template objects and endpoints from the former WebResourceComponent
servers:
  - url: 'http://localhost'
paths:
  /templates:
    get:
      summary: GET templates
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
      operationId: get-templates
    post:
      summary: POST template
      operationId: post-templates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        description: ''
  '/templates/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: GET template
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
      operationId: get-templates-id
    put:
      summary: PUT template
      operationId: put-templates-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
    delete:
      summary: DELETE template
      operationId: delete-templates-id
      responses:
        '200':
          description: OK
  /template_groups:
    get:
      summary: GET Template groups
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup'
      operationId: get-template_groups
    post:
      summary: POST Template group
      operationId: post-template_groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateGroup'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateGroup'
  '/template_groups/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: GET Template group
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateGroup'
      operationId: get-template_groups-id
    put:
      summary: PUT Template group
      operationId: put-template_groups-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateGroup'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateGroup'
    delete:
      summary: DELETE Template group
      operationId: delete-template_groups-id
      responses:
        '200':
          description: OK
components:
  schemas:
    Template:
      title: Template
      type: object
      description: 'Templates holds information of your page, page part or a pdf.'
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        name:
          type: string
          description: The internal name of this template
        title:
          type: string
          description: The external name of this template
        description:
          type: string
          description: The description of this template
        createSlug:
          description: Whether to auto create a slug on creation of this template
          type: boolean
          writeOnly: true
        content:
          type: string
          description: The content of this template.
          example: '<div>{{ ''Logged in as: ''~user.name }} </div>'
        variables:
          type: array
          description: Optional variables ussed during rendering
          items:
            type: string
        templateEngine:
          type: string
          enum:
            - twig
            - md
            - rst
          description: 'The template engine used to render this template. Schould be either twig (Twig), md (Markdown) or rst (reStructuredText)'
        slugs:
          type: array
          items:
            type: string
        application:
          type: string
        organization:
          type: string
        templateGroups:
          type: array
          items:
            $ref: '#/components/schemas/TemplateGroup'
      required:
        - name
        - content
        - templateEngine
    TemplateGroup:
      title: TemplateGroup
      x-stoplight:
        id: jfh0r0vn4ffgq
      type: object
      description: Template groups can be used for organizing templates.
      properties:
        name:
          type: string
          description: The name of this group
        description:
          type: string
          description: The description of this group
        templates:
          type: array
          items:
            $ref: '#/components/schemas/Template'
        application:
          type: string
        organization:
          type: string
        '':
          type: string
      required:
        - name
